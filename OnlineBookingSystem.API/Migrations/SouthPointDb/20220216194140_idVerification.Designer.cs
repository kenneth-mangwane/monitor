// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SouthPointMaintenance.Data;

namespace OBS.API.Migrations.SouthPointDb
{
    [DbContext(typeof(SouthPointDbContext))]
    [Migration("20220216194140_idVerification")]
    partial class idVerification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SPM.Database.Data.Security.DSPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastAccessed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DSPage");
                });

            modelBuilder.Entity("SPM.Database.Data.Security.DSPageRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DSPageId")
                        .HasColumnType("int");

                    b.Property<int>("DSPermissionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DSPageId");

                    b.HasIndex("DSPermissionTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("DSPageRolePermissions");
                });

            modelBuilder.Entity("SPM.Database.Data.Security.DSPermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPageSpecific")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DSPermissionTypes");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AllowedNextStates", b =>
                {
                    b.Property<int>("AllowedNextStatesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NextID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("AllowedNextStatesID");

                    b.ToTable("StateDefinedStatuses");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AllowedRoleStates", b =>
                {
                    b.Property<int>("AllowedRoleStatesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.HasKey("AllowedRoleStatesID");

                    b.ToTable("RoleDefinedStatuses");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.App", b =>
                {
                    b.Property<int>("AppID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppBuildNumberCurrent")
                        .HasColumnType("int");

                    b.Property<int>("AppBuildNumberMin")
                        .HasColumnType("int");

                    b.Property<Guid>("AppGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppOS")
                        .HasColumnType("int");

                    b.Property<string>("AppPackageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppVersionNameCurrent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppVersionNameMin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppID");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AppSync", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LastSync")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppSync");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AppVersion", b =>
                {
                    b.Property<int>("AppVersionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppBuildNumber")
                        .HasColumnType("int");

                    b.Property<int>("AppID")
                        .HasColumnType("int");

                    b.Property<string>("AppVersionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppVersionID");

                    b.ToTable("AppVersions");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(512)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<float>("AccountBalance")
                        .HasColumnType("real");

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<long?>("ActiveOracleLeaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("ActiveOracleLeaseNum")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("AltEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicationUserTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BalanceFetchDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("BalanceIsUpToDate")
                        .HasColumnType("bit");

                    b.Property<long?>("BuildingID")
                        .HasColumnType("bigint");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmailTempCode")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<DateTime?>("EmailTempCodeExpired")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<long?>("FloorID")
                        .HasColumnType("bigint");

                    b.Property<string>("Identifier")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyOTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("MiFiUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("MobileNumberConfirmed")
                        .HasColumnType("int");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NotificationToken")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<DateTime?>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OracleBuildingLocationId")
                        .HasColumnType("int");

                    b.Property<string>("OracleCustomerId")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("PackageOTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResetCode")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<DateTime?>("ResetCodeExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResetPasswordFailCount")
                        .HasColumnType("int");

                    b.Property<int>("ResetPasswordStep")
                        .HasColumnType("int");

                    b.Property<bool>("ResetPending")
                        .HasColumnType("bit");

                    b.Property<long?>("RoomID")
                        .HasColumnType("bigint");

                    b.Property<string>("SPRefenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SmsTempCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SmsTempCodeExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantID")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WifiToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingID");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AuditHistory", b =>
                {
                    b.Property<int>("AuditHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityID")
                        .HasColumnType("int");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditHistoryID");

                    b.ToTable("AuditHistory");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Checklist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Assigned")
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("ManualCompletion")
                        .HasColumnType("bit");

                    b.Property<int?>("OnboardingId")
                        .HasColumnType("int");

                    b.Property<long?>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Assigned");

                    b.HasIndex("OnboardingId");

                    b.HasIndex("StateId");

                    b.HasIndex("TenantId");

                    b.ToTable("Checklists");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ChecklistLocations");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistProblem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistId")
                        .HasColumnType("int");

                    b.Property<int>("ChecklistLocationId")
                        .HasColumnType("int");

                    b.Property<int>("ChecklistQuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeclined")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("TenantComment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistId");

                    b.HasIndex("ChecklistLocationId");

                    b.HasIndex("ChecklistQuestionId");

                    b.ToTable("ChecklistProblems");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ChecklistQuestions");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistState", b =>
                {
                    b.Property<int>("ChecklistStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("ChecklistStateId");

                    b.ToTable("ChecklistStates");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistTemplate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ChecklistTemplates");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChecklistID")
                        .HasColumnType("int");

                    b.Property<int>("CommentOwner")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.CommercialQuery", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Building")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Floor")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Fullname")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Region")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("RequestID")
                        .HasColumnType("int");

                    b.Property<string>("RequestType")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Shop")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("TenantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TenantID");

                    b.ToTable("CommercialQueries");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.CommonArea", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BuildingID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FloorID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("FloorID");

                    b.ToTable("CommonAreas");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("DisciplineId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.EmergencyIntake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AcceptedTermsConditions")
                        .HasColumnType("bit");

                    b.Property<bool>("AccountCleared")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AccountClearedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ApplicationDenied")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApplicationDeniedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BalanceApproverId")
                        .HasColumnType("int");

                    b.Property<bool>("BiometricUnsuspended")
                        .HasColumnType("bit");

                    b.Property<bool?>("CompletedCleaningQuestionaire")
                        .HasColumnType("bit");

                    b.Property<bool?>("CompletedScreeningQuestionaire")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExpirationNotication")
                        .HasColumnType("bit");

                    b.Property<bool>("FacilitiesCleared")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FacilitiesClearedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("HealthCheckCleared")
                        .HasColumnType("bit");

                    b.Property<string>("InstitutionLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InstitutionLetterNA")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("MaskIssued")
                        .HasColumnType("bit");

                    b.Property<string>("MedicalCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OnboardingId")
                        .HasColumnType("int");

                    b.Property<bool>("POPDeclined")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("POPUploadDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("PassedScreening")
                        .HasColumnType("bit");

                    b.Property<string>("ProofOfPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReturnDateSchedularId")
                        .HasColumnType("int");

                    b.Property<string>("ReturnLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnOTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ScheduledReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScreeningApproverId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScreeningQuestionaireAcceptedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ScreeningQuestionaireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserTemperature")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BalanceApproverId");

                    b.HasIndex("OnboardingId");

                    b.HasIndex("ReturnDateSchedularId");

                    b.HasIndex("ScreeningApproverId");

                    b.HasIndex("UserId");

                    b.ToTable("EmergencyIntake");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RegionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.EmployeeBuilding", b =>
                {
                    b.Property<int>("EmployeeBuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeBuildingId");

                    b.ToTable("EmployeeBuildings");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FailedJob", b =>
                {
                    b.Property<int>("FailedJobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<long>("pos")
                        .HasColumnType("bigint");

                    b.HasKey("FailedJobID");

                    b.ToTable("FailedJobs");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FailedJobError", b =>
                {
                    b.Property<int>("FailedJobErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FailedJobErrorId");

                    b.ToTable("FailedJobErrors");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Floor", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OracleBuildingId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OracleFloorId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OracleFloorNumber")
                        .HasColumnType("VARCHAR(8000)");

                    b.HasKey("ID");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("FreshData");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APIForeignUser", b =>
                {
                    b.Property<long>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("APITaskid")
                        .HasColumnType("bigint");

                    b.HasKey("user_id");

                    b.HasIndex("APITaskid");

                    b.ToTable("APIForeignUsers");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APILead", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("campaign_id")
                        .HasColumnType("bigint");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("custom_fieldAPICustomFieldId")
                        .HasColumnType("int");

                    b.Property<string>("deal_product_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("lead_source_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("lead_stage_id")
                        .HasColumnType("bigint");

                    b.Property<string>("medium")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobile_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("owner_id")
                        .HasColumnType("bigint");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("work")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("custom_fieldAPICustomFieldId");

                    b.ToTable("APILeads");

                    b.HasDiscriminator<string>("Discriminator").HasValue("APILead");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APITask", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("completed_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("created_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("creater_id")
                        .HasColumnType("bigint");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("due_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("outcome_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("owner_id")
                        .HasColumnType("bigint");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<long>("targetable_id")
                        .HasColumnType("bigint");

                    b.Property<string>("targetable_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("task_type_id")
                        .HasColumnType("bigint");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("updated_at")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("updater_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("APITasks");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APIUser", b =>
                {
                    b.Property<long?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("auth_key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("display_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<string>("mobile_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("work_number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("APIUsers");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.ApiOutcome", b =>
                {
                    b.Property<long>("outcome_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("outcome_id");

                    b.ToTable("ApiOutcomes");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.IDVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IDVerifications");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ImportJob", b =>
                {
                    b.Property<int>("ImportJobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRecords")
                        .HasColumnType("int");

                    b.Property<long>("pos")
                        .HasColumnType("bigint");

                    b.HasKey("ImportJobID");

                    b.ToTable("ImportJobs");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ImportJobError", b =>
                {
                    b.Property<int>("ImportJobErrorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdORPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImportJobErrorId");

                    b.ToTable("ImportJobErrors");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Location", b =>
                {
                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActiveEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActiveStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("LocationAlias")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("LocationTypeLookupCode")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Office")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("OldBuildingId")
                        .HasColumnType("int");

                    b.Property<string>("ParentLocation")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("ParentLocationID")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LocationId");

                    b.HasIndex("RegionId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Notification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Global")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSegmented")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("SegmentId")
                        .HasColumnType("int");

                    b.Property<string>("SourceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SourceID")
                        .HasColumnType("int");

                    b.Property<int?>("TemplateMessageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Unread")
                        .HasColumnType("bit");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SegmentId");

                    b.HasIndex("TemplateMessageId");

                    b.HasIndex("UserID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Onboarding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ChecklistComplete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecialCase")
                        .HasColumnType("bit");

                    b.Property<string>("KeyCode")
                        .HasColumnType("VARCHAR(300)");

                    b.Property<bool>("KeyIssued")
                        .HasColumnType("bit");

                    b.Property<string>("LaundryCardNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LeaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ManualCompletion")
                        .HasColumnType("bit");

                    b.Property<bool>("NotifiedKey")
                        .HasColumnType("bit");

                    b.Property<bool>("NotifiedPackage")
                        .HasColumnType("bit");

                    b.Property<bool>("PackageIssued")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("WifiTokenIssued")
                        .HasColumnType("bit");

                    b.Property<bool>("WifiTokenNotified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Onboardings");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.OnboardingNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OnboardingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OnboardingId");

                    b.HasIndex("UserId");

                    b.ToTable("OnboardingNotes");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.OnboardingSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FloorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OnboardingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OnboardingStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("PreOnboardingDays")
                        .HasColumnType("int");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Segment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FloorId");

                    b.HasIndex("RegionId");

                    b.ToTable("OnboardingSegments");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.PublicHoliday", b =>
                {
                    b.Property<int>("PublicHolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PublicHolidayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublicHolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublicHolidayID");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Query", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Queries");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.QueryResponse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QueryID")
                        .HasColumnType("int");

                    b.Property<int?>("RespondentID")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("QueryID");

                    b.HasIndex("RespondentID");

                    b.ToTable("QueryResponses");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("ResponseRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(8000)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Request", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ArchivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AssignedEmployee")
                        .HasColumnType("int");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CommonAreasID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FloorID")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<int>("LoggedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoggedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Queried")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("RatingComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestRatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<string>("SPDevice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("TenantID")
                        .HasColumnType("int");

                    b.Property<int>("WorkDurationDays")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.RequestAudit", b =>
                {
                    b.Property<int>("RequestAuditID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedToID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoggedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReAssignedToID")
                        .HasColumnType("int");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RequestAuditID");

                    b.ToTable("RequestAudits");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.RequestCommentImage", b =>
                {
                    b.Property<int>("RequestCommentImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrivateImage")
                        .HasColumnType("bit");

                    b.Property<string>("RequestCommentImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestCommentImageID");

                    b.ToTable("RequestCommentImages");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.RequestImage", b =>
                {
                    b.Property<int>("RequestImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatedCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPrivateImage")
                        .HasColumnType("bit");

                    b.Property<int>("RequestID")
                        .HasColumnType("int");

                    b.Property<string>("RequestImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestImageID");

                    b.ToTable("RequestImages");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Room", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<long>("FloorId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OracleFloorId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OracleLocationCode")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<string>("OracleRoomNumber")
                        .HasColumnType("VARCHAR(8000)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SPMBuilding", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowUserRegistration")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OracleBuildingId")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OracleBuildingName")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<string>("OracleLocationCode")
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<int?>("OracleTotalNumberOfFloors")
                        .HasColumnType("int");

                    b.Property<Guid?>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("RegionId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SectionQustion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("SectionId");

                    b.ToTable("SectionQustions");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ServiceLevelAgreement", b =>
                {
                    b.Property<int>("ServiceLevelAgreementID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("ServiceLevelAgreementID");

                    b.ToTable("ServiceLevelAgreements");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ShortUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clicks")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShortUrls");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SouthPointHoliday", b =>
                {
                    b.Property<int>("SouthPointHolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ArtisanCanWork")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HolidayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("StudentCanLogin")
                        .HasColumnType("bit");

                    b.HasKey("SouthPointHolidayID");

                    b.ToTable("SouthPointHolidays");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HexColour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefaultTimeToCompletion")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<int>("RequestslaId")
                        .HasColumnType("int");

                    b.HasKey("SubCategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TemplateMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sent")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TemplateMessages");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TemplateMessageSegment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNational")
                        .HasColumnType("bit");

                    b.Property<string>("Players")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TemplateMessageId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemplateMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Tenant", b =>
                {
                    b.Property<int>("TenantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attribute1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BuildingID")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LeaseID")
                        .HasColumnType("bigint");

                    b.Property<string>("LeaseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupancyDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PartyID")
                        .HasColumnType("bigint");

                    b.Property<string>("PartyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPRefenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantID");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TenantKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyCode")
                        .HasColumnType("VARCHAR(300)");

                    b.Property<bool>("KeyLost")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyReturned")
                        .HasColumnType("bit");

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReplacementKeyId")
                        .HasColumnType("int");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReplacementKeyId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantKeys");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.UserResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DescriptorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserResponses");
                });

            modelBuilder.Entity("SouthPointMaintenance.Models.FreshSales.APICustomField", b =>
                {
                    b.Property<int>("APICustomFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cf_building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("cf_customer_id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cf_customer_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_desired_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_id_passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_lease_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_lease_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_za_city")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("APICustomFieldId");

                    b.ToTable("APICustomField");
                });

            modelBuilder.Entity("SouthPointMaintenance.Models.FreshSales.APIDeal", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("APIContactid")
                        .HasColumnType("bigint");

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("base_currency_amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("closed_date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("deal_pipeline_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("deal_stage_id")
                        .HasColumnType("bigint");

                    b.Property<long?>("deal_type_id")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("expected_close")
                        .HasColumnType("datetime2");

                    b.Property<long?>("lead_source_id")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("owner_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("APIContactid");

                    b.ToTable("APIDeal");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APIContact", b =>
                {
                    b.HasBaseType("SouthPointMaintenance.Data.FreshSales.APILead");

                    b.Property<string>("cf_account_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_account_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_balance_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_book_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_comencement_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("cf_customer_id")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cf_customer_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_id_passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_institution_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_lease_num")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_lease_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_lease_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_location_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_marketing_amb_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_marketing_q1_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_marketing_q2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_parent_mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_room_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_run_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("cf_sasp_balance")
                        .HasColumnType("float");

                    b.Property<double>("cf_spms_balance")
                        .HasColumnType("float");

                    b.Property<string>("cf_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_student_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_tenn_bursar_flex_account_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_tenn_bursar_flex_account_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_tenn_bursar_flex_party_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_termination_date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cf_za_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_evaluated")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("APIContact");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SPM.Database.Data.Security.DSPageRolePermission", b =>
                {
                    b.HasOne("SPM.Database.Data.Security.DSPage", "DSPage")
                        .WithMany()
                        .HasForeignKey("DSPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPM.Database.Data.Security.DSPermissionType", "DSPermissionType")
                        .WithMany()
                        .HasForeignKey("DSPermissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DSPage");

                    b.Navigation("DSPermissionType");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.AppSync", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationRoleClaim", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationRoleId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUser", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.SPMBuilding", "Buildings")
                        .WithMany()
                        .HasForeignKey("BuildingID");

                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserClaim", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserLogin", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUserRole", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationRole", null)
                        .WithMany("Users")
                        .HasForeignKey("ApplicationRoleId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Checklist", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "AssignedToUser")
                        .WithMany()
                        .HasForeignKey("Assigned");

                    b.HasOne("SouthPointMaintenance.Data.Onboarding", null)
                        .WithMany("Checklists")
                        .HasForeignKey("OnboardingId");

                    b.HasOne("SouthPointMaintenance.Data.ChecklistState", "ChecklistState")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("AssignedToUser");

                    b.Navigation("ChecklistState");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ChecklistProblem", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Checklist", null)
                        .WithMany("Problems")
                        .HasForeignKey("ChecklistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ChecklistLocation", "ChecklistLocation")
                        .WithMany()
                        .HasForeignKey("ChecklistLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ChecklistQuestion", "ChecklistQuestion")
                        .WithMany()
                        .HasForeignKey("ChecklistQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChecklistLocation");

                    b.Navigation("ChecklistQuestion");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.CommercialQuery", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantID");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.CommonArea", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Floor", "floor")
                        .WithMany()
                        .HasForeignKey("FloorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("floor");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.EmergencyIntake", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "BalanceApprover")
                        .WithMany()
                        .HasForeignKey("BalanceApproverId");

                    b.HasOne("SouthPointMaintenance.Data.Onboarding", "Onboarding")
                        .WithMany()
                        .HasForeignKey("OnboardingId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "ReturnDateSchedular")
                        .WithMany()
                        .HasForeignKey("ReturnDateSchedularId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "ScreeningApprover")
                        .WithMany()
                        .HasForeignKey("ScreeningApproverId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BalanceApprover");

                    b.Navigation("Onboarding");

                    b.Navigation("ReturnDateSchedular");

                    b.Navigation("ScreeningApprover");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Employee", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Discipline");

                    b.Navigation("Supervisor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APIForeignUser", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.FreshSales.APITask", null)
                        .WithMany("task_users_attributes")
                        .HasForeignKey("APITaskid");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APILead", b =>
                {
                    b.HasOne("SouthPointMaintenance.Models.FreshSales.APICustomField", "custom_field")
                        .WithMany()
                        .HasForeignKey("custom_fieldAPICustomFieldId");

                    b.Navigation("custom_field");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Location", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Notification", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.TemplateMessageSegment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId");

                    b.HasOne("SouthPointMaintenance.Data.TemplateMessage", "TemplateMessage")
                        .WithMany()
                        .HasForeignKey("TemplateMessageId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Segment");

                    b.Navigation("TemplateMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Onboarding", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.OnboardingNote", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Onboarding", null)
                        .WithMany("Notes")
                        .HasForeignKey("OnboardingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.OnboardingSegment", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.SPMBuilding", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId");

                    b.HasOne("SouthPointMaintenance.Data.Floor", "Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.HasOne("SouthPointMaintenance.Data.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Building");

                    b.Navigation("Floor");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.QueryResponse", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Query", "Query")
                        .WithMany()
                        .HasForeignKey("QueryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.Employee", "Respondent")
                        .WithMany()
                        .HasForeignKey("RespondentID");

                    b.Navigation("Query");

                    b.Navigation("Respondent");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SPMBuilding", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.SectionQustion", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TemplateMessageSegment", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.TemplateMessage", null)
                        .WithMany("Segments")
                        .HasForeignKey("TemplateMessageId");

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TenantKey", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.TenantKey", "ReplacementKey")
                        .WithMany()
                        .HasForeignKey("ReplacementKeyId");

                    b.HasOne("SouthPointMaintenance.Data.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplacementKey");

                    b.Navigation("Room");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.UserResponse", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SouthPointMaintenance.Data.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SouthPointMaintenance.Models.FreshSales.APIDeal", b =>
                {
                    b.HasOne("SouthPointMaintenance.Data.FreshSales.APIContact", null)
                        .WithMany("deals")
                        .HasForeignKey("APIContactid");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationRole", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Checklist", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APITask", b =>
                {
                    b.Navigation("task_users_attributes");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.Onboarding", b =>
                {
                    b.Navigation("Checklists");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.TemplateMessage", b =>
                {
                    b.Navigation("Segments");
                });

            modelBuilder.Entity("SouthPointMaintenance.Data.FreshSales.APIContact", b =>
                {
                    b.Navigation("deals");
                });
#pragma warning restore 612, 618
        }
    }
}
