// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBS.Database;

namespace OBS.API.Migrations
{
    [DbContext(typeof(OBSDbContext))]
    [Migration("20220310071529_LeaseAnswers")]
    partial class LeaseAnswers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("obs")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuildingUserRole", b =>
                {
                    b.Property<int>("BuildingsId")
                        .HasColumnType("int");

                    b.Property<Guid>("BuildingUserRolesRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BuildingUserRolesUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BuildingsId", "BuildingUserRolesRoleId", "BuildingUserRolesUserId");

                    b.HasIndex("BuildingUserRolesRoleId", "BuildingUserRolesUserId");

                    b.ToTable("BuildingUserRole");
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.AuditHeader", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<string>("ActionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AuditHeaders");
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.AuditHeaderDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AuditHeaderID")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AuditHeaderID");

                    b.ToTable("AuditeHeaderDetails");
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.FrequencyCalculationRule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DivideBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FrequencyCalculationRules");
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.RoomTypeDTO", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseId")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupants")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReocuringCosts")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("RoomTypeDTO");
                });

            modelBuilder.Entity("OBS.Database.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("OBS.Database.Models.AdminOveridePin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminPin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AdminOveridePins");
                });

            modelBuilder.Entity("OBS.Database.Models.ApartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OracleTypeCode")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ApartmentTypes");
                });

            modelBuilder.Entity("OBS.Database.Models.ApplicationConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPassword")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidationExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationConfigurations");
                });

            modelBuilder.Entity("OBS.Database.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("ApplicationStatusses");
                });

            modelBuilder.Entity("OBS.Database.Models.ArchiveBlacklist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BlackListType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArchiveBlacklist");
                });

            modelBuilder.Entity("OBS.Database.Models.ArchivedRoomVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AccountUpToDate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ArchiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BursarAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Damages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesKeys")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExported")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueToVacateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumberPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InspectionScheduled")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyReturned")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseBedBuildingID")
                        .HasColumnType("int");

                    b.Property<string>("LeaseBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseCustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotReturningReasonID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherReasonNotReturning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreBooked")
                        .HasColumnType("bit");

                    b.Property<int?>("ReasonsNotReturningID")
                        .HasColumnType("int");

                    b.Property<bool>("RefundDue")
                        .HasColumnType("bit");

                    b.Property<string>("ReturningNextYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomInspected")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("UserWantsDeposit")
                        .HasColumnType("bit");

                    b.Property<string>("VacateBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasFoundBySearching")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuildingID");

                    b.HasIndex("ReasonsNotReturningID");

                    b.ToTable("ArchivedRoomVacations");
                });

            modelBuilder.Entity("OBS.Database.Models.AutoCancelledLease", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptedTermsAndContions")
                        .HasColumnType("bit");

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BursarID")
                        .HasColumnType("int");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinalLease")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeardFromWhereQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerdFromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousholdEarnings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LeaseCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaseConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseID1")
                        .HasColumnType("int");

                    b.Property<int?>("LeaseKey")
                        .HasColumnType("int");

                    b.Property<string>("LeaseRefNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ora_CUST_ACCOUNT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_CUST_ACCOUNT_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_LEASE_NUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentDateExtended")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDateExtendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDateExtendedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReminderSMSSent")
                        .HasColumnType("bit");

                    b.Property<string>("SMSConversationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID1");

                    b.ToTable("AutoCancelledLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.BillingPeriod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("BillingPeriods");
                });

            modelBuilder.Entity("OBS.Database.Models.Blacklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlackListType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Blacklists");
                });

            modelBuilder.Entity("OBS.Database.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LeaseId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaseId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("OBS.Database.Models.Building", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Apartment")
                        .HasColumnType("bit");

                    b.Property<string>("BuildingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingType")
                        .HasColumnType("int");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<bool>("Cluster")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Domitory")
                        .HasColumnType("bit");

                    b.Property<bool>("HasElectricity")
                        .HasColumnType("bit");

                    b.Property<bool>("HasParking")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPrepaidWater")
                        .HasColumnType("bit");

                    b.Property<string>("InfoHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MapID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<bool>("SpaceAvailable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CityID");

                    b.HasIndex("MapID");

                    b.HasIndex("OrganizationID");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("OBS.Database.Models.BuildingInstitutionRanking", b =>
                {
                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasIndex("BuildingID");

                    b.HasIndex("InstitutionID");

                    b.ToTable("BuildingInstitutionRankings");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarFeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BursarFeeType");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarPricing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("BursarID")
                        .HasColumnType("int");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BursarPricing");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarPricingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BursarFeeTypeID")
                        .HasColumnType("int");

                    b.Property<int>("BursarPricingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BursarFeeTypeID");

                    b.HasIndex("BursarPricingID");

                    b.ToTable("BursarPricingItem");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarValidation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BursarID")
                        .HasColumnType("int");

                    b.Property<string>("BursarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Validated")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BursarValidations");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarValidationEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BursarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPassport")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Notes")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Sharing")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserCreated")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Validated")
                        .HasColumnType("bit");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BursarValidationEntries");
                });

            modelBuilder.Entity("OBS.Database.Models.Bursars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("CelbuxEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bursars");
                });

            modelBuilder.Entity("OBS.Database.Models.CancelReservation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Bed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BursarAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCancelled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExistsAsCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.ToTable("CancelReservations");
                });

            modelBuilder.Entity("OBS.Database.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("OBS.Database.Models.CityInstitution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionID")
                        .HasColumnType("int");

                    b.Property<int>("Institution_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.HasIndex("InstitutionID");

                    b.ToTable("CityInstitutions");
                });

            modelBuilder.Entity("OBS.Database.Models.Country", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeonameID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OBS.Database.Models.CustomMessageDataExtract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseNum")
                        .HasColumnType("int");

                    b.Property<string>("M65Ref")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomMessageDataExtracts");
                });

            modelBuilder.Entity("OBS.Database.Models.CustomSentMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bursar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomSentMessages");
                });

            modelBuilder.Entity("OBS.Database.Models.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("DocumentTypeId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("OBS.Database.Models.DocumentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("OBS.Database.Models.Employer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("OBS.Database.Models.FeeType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BillingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrequencyId")
                        .HasColumnType("int");

                    b.Property<bool>("Refundable")
                        .HasColumnType("bit");

                    b.Property<bool>("VariableNoTenants")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("FrequencyId");

                    b.ToTable("FeeTypes");
                });

            modelBuilder.Entity("OBS.Database.Models.FeeTypeBuildingBillingTypeTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillingTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeeTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FeeTypeId");

                    b.ToTable("FeeTypeBuildingBillingTypeTemplates");
                });

            modelBuilder.Entity("OBS.Database.Models.FrequencyType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OracleFrequencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FrequencyTypes");
                });

            modelBuilder.Entity("OBS.Database.Models.GraduationQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GraduationQuestions");
                });

            modelBuilder.Entity("OBS.Database.Models.HeadLease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BursarCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaseCustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseType")
                        .HasColumnType("int");

                    b.Property<int>("OracleLeaseId")
                        .HasColumnType("int");

                    b.Property<string>("OracleLeaseNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HeadLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.HeadLeaseLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApartmentTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("HeadLeaseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsParking")
                        .HasColumnType("bit");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MaxOccupancy")
                        .HasColumnType("int");

                    b.Property<int?>("OracleTenancyId")
                        .HasColumnType("int");

                    b.Property<bool>("RoomASharing")
                        .HasColumnType("bit");

                    b.Property<bool>("RoomCSharing")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("HeadLeaseId");

                    b.ToTable("HeadLeaseLocations");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("FailedPasswordAnswerAttemptCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("FailedPasswordAnswerAttemptWindowStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedPasswordAttemptCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("FailedPasswordAttemptWindowStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastLockoutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastPasswordChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoweredEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("MobilePIN")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("PasswordAnswer")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<int>("PasswordFormat")
                        .HasColumnType("int");

                    b.Property<string>("PasswordQuestion")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.HasKey("Id");

                    b.ToTable("aspnet_Membership");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("LoweredRoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.ToTable("aspnet_Roles");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoweredUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.Property<string>("MobileAlias")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR(16)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR(256)");

                    b.HasKey("Id");

                    b.ToTable("aspnet_Users");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.UserDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("Domain")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("aspnet_Users_UserDetails");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.UserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("aspnet_UsersInRoles");
                });

            modelBuilder.Entity("OBS.Database.Models.Institution", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("OBS.Database.Models.Lease", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptedHouseRules")
                        .HasColumnType("bit");

                    b.Property<bool>("AcceptedTermsAndContions")
                        .HasColumnType("bit");

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int?>("BursarID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinalLease")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeardFromWhereQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerdFromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousholdEarnings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LeaseCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaseConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseRefNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingBrandAmbassadorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingBrandAmbassadorNameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion10Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion11Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion12Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion13Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion5Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion6Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion7Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion8Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion9Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ora_CUST_ACCOUNT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_CUST_ACCOUNT_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_LEASE_NUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentDateExtended")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDateExtendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDateExtendedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReminderSMSSent")
                        .HasColumnType("bit");

                    b.Property<string>("SMSConversationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.ToTable("Leases");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseCancel", b =>
                {
                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BursarType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseYear")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialLeaseId")
                        .HasColumnType("int");

                    b.Property<string>("TenAttribute1")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("ResidentialLeaseId");

                    b.ToTable("ResidentialCancelledLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptedTermsAndContions")
                        .HasColumnType("bit");

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int?>("BursarID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinalLease")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerdFromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousholdEarnings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LeaseCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaseConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseRefNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Lease_ID")
                        .HasColumnType("int");

                    b.Property<string>("MarketingQuestion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingQuestion3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ora_CUST_ACCOUNT_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_CUST_ACCOUNT_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ora_LEASE_NUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PaymentDateExtended")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDateExtendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDateExtendedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReminderSMSSent")
                        .HasColumnType("bit");

                    b.Property<string>("SMSConversationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.ToTable("LeaseHistories");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseMarketingAnswer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseID")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID");

                    b.ToTable("LeaseMarketingAnswers");
                });

            modelBuilder.Entity("OBS.Database.Models.LeasesExport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptedTermsAndContions")
                        .HasColumnType("bit");

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int?>("BursarID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinalLease")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HerdFromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HousholdEarnings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LeaseCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaseConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseRefNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHomeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentWorkNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMSConversationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LeasesExports");
                });

            modelBuilder.Entity("OBS.Database.Models.LockedBed", b =>
                {
                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LockedTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasIndex("BuildingID");

                    b.ToTable("LockedBeds");
                });

            modelBuilder.Entity("OBS.Database.Models.Lookup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LookupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LookupTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LookupTypeID");

                    b.ToTable("Lookups");
                });

            modelBuilder.Entity("OBS.Database.Models.LookupType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LookupTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LookupTypes");
                });

            modelBuilder.Entity("OBS.Database.Models.MailMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MailMessages");
                });

            modelBuilder.Entity("OBS.Database.Models.MaintenanceMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Lookup1ID")
                        .HasColumnType("int");

                    b.Property<int?>("LookupID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Roomnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("ToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BuildingID");

                    b.HasIndex("Lookup1ID");

                    b.HasIndex("LookupID");

                    b.ToTable("MaintenanceMessages");
                });

            modelBuilder.Entity("OBS.Database.Models.MaintenanceMessagesView", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.Property<string>("ToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MaintenanceMessagesViews");
                });

            modelBuilder.Entity("OBS.Database.Models.Map", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MapImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("OBS.Database.Models.MonthlyPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseID")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID");

                    b.ToTable("MonthlyPayments");
                });

            modelBuilder.Entity("OBS.Database.Models.OnceOffPayment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LeaseID")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID");

                    b.ToTable("OnceOffPayments");
                });

            modelBuilder.Entity("OBS.Database.Models.OracleErrorCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("OracleErrorCodes");
                });

            modelBuilder.Entity("OBS.Database.Models.Organization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("OBS.Database.Models.OtpSent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("idNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("otpExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("otpSent")
                        .HasColumnType("bit");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("successful")
                        .HasColumnType("bit");

                    b.Property<DateTime>("validUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OtpSent");
                });

            modelBuilder.Entity("OBS.Database.Models.Parking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialLeaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResidentialLeaseId");

                    b.ToTable("Parkings");
                });

            modelBuilder.Entity("OBS.Database.Models.PendingBiometrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IdPassport")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LeaseId")
                        .HasColumnType("int");

                    b.Property<string>("LeaseNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TryCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PendingBiometrics");
                });

            modelBuilder.Entity("OBS.Database.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("OBS.Database.Models.PricingSummaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillingTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrequencyTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NoOccupants")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Refundable")
                        .HasColumnType("bit");

                    b.Property<int>("ResidentialLeaseId")
                        .HasColumnType("int");

                    b.Property<int>("TermTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("VariableNoTenants")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BillingTypeId");

                    b.HasIndex("FrequencyTypeId");

                    b.HasIndex("ResidentialLeaseId");

                    b.ToTable("ResidentialLeasePricing");
                });

            modelBuilder.Entity("OBS.Database.Models.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeonameId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CountryID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("OBS.Database.Models.QuoteAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("Bursar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FirstMonthRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Registration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("QuoteAudits");
                });

            modelBuilder.Entity("OBS.Database.Models.ReasonsNotReturning", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ReasonsNotReturnings");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AttachmentTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefundMessageID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentTypeID");

                    b.HasIndex("RefundMessageID");

                    b.ToTable("RefundAttachment");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundAttachmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AttachmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RefundAttachmentType");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageSender")
                        .HasColumnType("int");

                    b.Property<string>("MessageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefundRequestID")
                        .HasColumnType("int");

                    b.Property<int?>("RefundStatusId")
                        .HasColumnType("int");

                    b.Property<int>("RefundStatusesID")
                        .HasColumnType("int");

                    b.Property<string>("RequiredDocuments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SentBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RefundRequestID");

                    b.HasIndex("RefundStatusId");

                    b.ToTable("RefundMessage");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefundStatusID")
                        .HasColumnType("int");

                    b.Property<string>("StudentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vacated")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RefundStatusID");

                    b.ToTable("RefundRequest");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefundStatus");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialBursarCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BursarId")
                        .HasColumnType("int");

                    b.Property<int>("BursarLeaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResidentialBursarCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AddingTenant")
                        .HasColumnType("bit");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountAppliedFor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApartmentTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicationStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyingForSameRoom")
                        .HasColumnType("bit");

                    b.Property<decimal>("ApprovedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NextOfKinId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBays")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOccupants")
                        .HasColumnType("int");

                    b.Property<bool>("Parking")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PlannedOccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ApplicationStatusId");

                    b.HasIndex("EmployerId");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("ResidentialCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomerDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("ResidentialCustomerId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ResidentialCustomerId");

                    b.ToTable("ResidentialCustomerDocuments");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomerSubOccupant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasParking")
                        .HasColumnType("bit");

                    b.Property<string>("IdPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidentialCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentialCustomerId");

                    b.ToTable("ResidentialCustomerSubOccupants");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialLease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptHouseRules")
                        .HasColumnType("bit");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApartmentTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FinalLease")
                        .HasColumnType("bit");

                    b.Property<string>("ID_Passport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LeaseCancelled")
                        .HasColumnType("bit");

                    b.Property<bool>("LeaseConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("LeaseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseRefNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentDateExtended")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentDateExtendedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentDateExtendedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReminderSMSSent")
                        .HasColumnType("bit");

                    b.Property<int?>("ResidentialBursarCustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("ResidentialCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomLocationId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityPin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResidentialBursarCustomerId");

                    b.HasIndex("ResidentialCustomerId");

                    b.ToTable("ResidentialLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApartmentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillingPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOccupants")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillingPeriodId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("FeeTypeId");

                    b.ToTable("ResidentialPrices");
                });

            modelBuilder.Entity("OBS.Database.Models.RoomExpirationNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("LeaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReminderPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("SmsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("SmsId");

                    b.ToTable("RoomExpirationNotifications");
                });

            modelBuilder.Entity("OBS.Database.Models.RoomVacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AccountUpToDate")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BursarAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Damages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesKeys")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExported")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueToVacateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumberPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InspectionScheduled")
                        .HasColumnType("bit");

                    b.Property<bool>("KeyReturned")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseBedBuildingID")
                        .HasColumnType("int");

                    b.Property<string>("LeaseBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseCustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotReturningReasonID")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherReasonNotReturning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreBooked")
                        .HasColumnType("bit");

                    b.Property<int?>("ReasonsNotReturningID")
                        .HasColumnType("int");

                    b.Property<bool>("RefundDue")
                        .HasColumnType("bit");

                    b.Property<string>("ReturningNextYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RoomInspected")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UserWantsDeposit")
                        .HasColumnType("bit");

                    b.Property<string>("VacateBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasFoundBySearching")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuildingID");

                    b.HasIndex("ReasonsNotReturningID");

                    b.ToTable("RoomVacations");
                });

            modelBuilder.Entity("OBS.Database.Models.RoomVacationView", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountHolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountUpToDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingID")
                        .HasColumnType("int");

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BursarAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Damages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesKeys")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DamagesOther")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateExported")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueToVacateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FloorNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumberPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionScheduled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDuplicateBed")
                        .HasColumnType("bit");

                    b.Property<string>("IsDuplicateBedText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDuplicateCustomer")
                        .HasColumnType("bit");

                    b.Property<string>("KeyReturned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseBedBuildingID")
                        .HasColumnType("int");

                    b.Property<string>("LeaseBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseCustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonNotReturning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefundDue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturningNextYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalDamages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserWantsDeposit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacateBedLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasFoundBySearching")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RoomVacationView");
                });

            modelBuilder.Entity("OBS.Database.Models.SBUXMerchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MerchantID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORG_ID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SbuxMerchant");
                });

            modelBuilder.Entity("OBS.Database.Models.SentEmail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaseID")
                        .HasColumnType("int");

                    b.Property<string>("LeaseReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResidentialLeaseId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID");

                    b.HasIndex("ResidentialLeaseId");

                    b.ToTable("SentEmails");
                });

            modelBuilder.Entity("OBS.Database.Models.SentSMS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateSent")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeaseID")
                        .HasColumnType("int");

                    b.Property<string>("LeaseReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResidentialLeaseId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LeaseID");

                    b.HasIndex("ResidentialLeaseId");

                    b.ToTable("SentSMS");
                });

            modelBuilder.Entity("OBS.Database.Models.Sleepover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPassport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SleepoverTypeId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SleepoverTypeId");

                    b.ToTable("Sleepovers");
                });

            modelBuilder.Entity("OBS.Database.Models.SleepoverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SleepoverType");
                });

            modelBuilder.Entity("OBS.Database.Models.Town", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeonameId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Logitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("OBS.Database.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Created")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MatchedRecon")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OracleAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SbuxMerchantId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SbuxMerchantId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("OBS.Database.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TransactionType");
                });

            modelBuilder.Entity("OBS.Database.Models.VacateInspectionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApartmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DamageComment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DamageCostPostFix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DamageCostPreFix")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaximumDamageCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinimumDamageCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentTypeId");

                    b.ToTable("VacateInspectionLists");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiAllocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllocatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllocationPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataAllocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateActivated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAllocated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateNotified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRedeemed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaseID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PricingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SendCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniquePin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WifiPricingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WifiPricingID");

                    b.ToTable("WifiAllocations");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiBuildingPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PricingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WifiPricingID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WifiPricingID");

                    b.ToTable("WifiBuildingPriceMaps");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiPricing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllocationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MonthlyDefault")
                        .HasColumnType("bit");

                    b.Property<short>("Price")
                        .HasColumnType("smallint");

                    b.Property<string>("PricingID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("WifiPricings");
                });

            modelBuilder.Entity("OBS.Database.Models.sysdiagram", b =>
                {
                    b.Property<byte[]>("definition")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("diagram_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("principal_id")
                        .HasColumnType("int");

                    b.Property<int?>("version")
                        .HasColumnType("int");

                    b.ToTable("sysdiagrams");
                });

            modelBuilder.Entity("BuildingUserRole", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", null)
                        .WithMany()
                        .HasForeignKey("BuildingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.IdentityFramework.UserRole", null)
                        .WithMany()
                        .HasForeignKey("BuildingUserRolesRoleId", "BuildingUserRolesUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.AuditHeaderDetail", b =>
                {
                    b.HasOne("OBS.Common.BusinessObjects.AuditHeader", "AuditHeader")
                        .WithMany("AuditHeaderDetails")
                        .HasForeignKey("AuditHeaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuditHeader");
                });

            modelBuilder.Entity("OBS.Database.Models.ArchivedRoomVacation", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("ArchivedRoomVacations")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.ReasonsNotReturning", "ReasonsNotReturning")
                        .WithMany("ArchivedRoomVacations")
                        .HasForeignKey("ReasonsNotReturningID");

                    b.Navigation("Building");

                    b.Navigation("ReasonsNotReturning");
                });

            modelBuilder.Entity("OBS.Database.Models.AutoCancelledLease", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany("AutoCancelledLease")
                        .HasForeignKey("LeaseID1");

                    b.Navigation("Lease");
                });

            modelBuilder.Entity("OBS.Database.Models.Booking", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany()
                        .HasForeignKey("LeaseId");

                    b.Navigation("Lease");
                });

            modelBuilder.Entity("OBS.Database.Models.Building", b =>
                {
                    b.HasOne("OBS.Database.Models.City", "City")
                        .WithMany("Buildings")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Map", "Map")
                        .WithMany("Buildings")
                        .HasForeignKey("MapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Organization", "Organization")
                        .WithMany("Buildings")
                        .HasForeignKey("OrganizationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Map");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("OBS.Database.Models.BuildingInstitutionRanking", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarPricingItem", b =>
                {
                    b.HasOne("OBS.Database.Models.BursarFeeType", "BursarFeeType")
                        .WithMany()
                        .HasForeignKey("BursarFeeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.BursarPricing", "BursarPricing")
                        .WithMany("PricingItems")
                        .HasForeignKey("BursarPricingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BursarFeeType");

                    b.Navigation("BursarPricing");
                });

            modelBuilder.Entity("OBS.Database.Models.CancelReservation", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("CancelReservations")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("OBS.Database.Models.CityInstitution", b =>
                {
                    b.HasOne("OBS.Database.Models.City", "City")
                        .WithMany("CityInstitutions")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Institution", "Institution")
                        .WithMany("CityInstitutions")
                        .HasForeignKey("InstitutionID");

                    b.Navigation("City");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("OBS.Database.Models.Document", b =>
                {
                    b.HasOne("OBS.Database.Models.DocumentType", "DocumentType")
                        .WithMany("Documents")
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("OBS.Database.Models.Employer", b =>
                {
                    b.HasOne("OBS.Database.Models.Address", "Address")
                        .WithMany("Employers")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("OBS.Database.Models.FeeType", b =>
                {
                    b.HasOne("OBS.Database.Models.FrequencyType", "Frequency")
                        .WithMany("FeeTypes")
                        .HasForeignKey("FrequencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frequency");
                });

            modelBuilder.Entity("OBS.Database.Models.FeeTypeBuildingBillingTypeTemplate", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("FeeTypeBuildingBillingTypeTemplates")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.FeeType", "FeeType")
                        .WithMany("FeeTypeBuildingBillingTypeTemplates")
                        .HasForeignKey("FeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("FeeType");
                });

            modelBuilder.Entity("OBS.Database.Models.HeadLeaseLocation", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.HeadLease", "HeadLease")
                        .WithMany("Apartments")
                        .HasForeignKey("HeadLeaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("HeadLease");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.Membership", b =>
                {
                    b.HasOne("OBS.Database.Models.IdentityFramework.User", "User")
                        .WithOne("Membership")
                        .HasForeignKey("OBS.Database.Models.IdentityFramework.Membership", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.UserDetails", b =>
                {
                    b.HasOne("OBS.Database.Models.IdentityFramework.User", "User")
                        .WithOne("UserDetails")
                        .HasForeignKey("OBS.Database.Models.IdentityFramework.UserDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.UserRole", b =>
                {
                    b.HasOne("OBS.Database.Models.IdentityFramework.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.IdentityFramework.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OBS.Database.Models.Lease", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("Leases")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseCancel", b =>
                {
                    b.HasOne("OBS.Database.Models.ResidentialLease", "ResidentialLease")
                        .WithMany()
                        .HasForeignKey("ResidentialLeaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidentialLease");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseHistory", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("LeasesHistories")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("OBS.Database.Models.LeaseMarketingAnswer", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany()
                        .HasForeignKey("LeaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lease");
                });

            modelBuilder.Entity("OBS.Database.Models.LockedBed", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("OBS.Database.Models.Lookup", b =>
                {
                    b.HasOne("OBS.Database.Models.LookupType", "LookupType")
                        .WithMany("Lookups")
                        .HasForeignKey("LookupTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LookupType");
                });

            modelBuilder.Entity("OBS.Database.Models.MaintenanceMessage", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("MaintenanceMessages")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Lookup", "Lookup1")
                        .WithMany()
                        .HasForeignKey("Lookup1ID");

                    b.HasOne("OBS.Database.Models.Lookup", "Lookup")
                        .WithMany()
                        .HasForeignKey("LookupID");

                    b.Navigation("Building");

                    b.Navigation("Lookup");

                    b.Navigation("Lookup1");
                });

            modelBuilder.Entity("OBS.Database.Models.MonthlyPayment", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany("MonthlyPayments")
                        .HasForeignKey("LeaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lease");
                });

            modelBuilder.Entity("OBS.Database.Models.OnceOffPayment", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany("OnceOffPayments")
                        .HasForeignKey("LeaseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lease");
                });

            modelBuilder.Entity("OBS.Database.Models.Parking", b =>
                {
                    b.HasOne("OBS.Database.Models.ResidentialLease", "ResidentialLease")
                        .WithMany("Parkings")
                        .HasForeignKey("ResidentialLeaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidentialLease");
                });

            modelBuilder.Entity("OBS.Database.Models.Person", b =>
                {
                    b.HasOne("OBS.Database.Models.Address", "Address")
                        .WithMany("Persons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("OBS.Database.Models.PricingSummaryRecord", b =>
                {
                    b.HasOne("OBS.Database.Models.FeeType", "BillingType")
                        .WithMany("ResidentialLeasePricing")
                        .HasForeignKey("BillingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.FrequencyType", "FrequencyType")
                        .WithMany("ResidentialLeasePricing")
                        .HasForeignKey("FrequencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.ResidentialLease", "ResidentialLease")
                        .WithMany("Pricing")
                        .HasForeignKey("ResidentialLeaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingType");

                    b.Navigation("FrequencyType");

                    b.Navigation("ResidentialLease");
                });

            modelBuilder.Entity("OBS.Database.Models.Province", b =>
                {
                    b.HasOne("OBS.Database.Models.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundAttachment", b =>
                {
                    b.HasOne("OBS.Database.Models.RefundAttachmentType", "AttachmentType")
                        .WithMany()
                        .HasForeignKey("AttachmentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.RefundMessage", "RefundMessage")
                        .WithMany("RefundAttachments")
                        .HasForeignKey("RefundMessageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttachmentType");

                    b.Navigation("RefundMessage");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundMessage", b =>
                {
                    b.HasOne("OBS.Database.Models.RefundRequest", "RefundRequest")
                        .WithMany("RefundMessages")
                        .HasForeignKey("RefundRequestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.RefundStatus", "RefundStatus")
                        .WithMany()
                        .HasForeignKey("RefundStatusId");

                    b.Navigation("RefundRequest");

                    b.Navigation("RefundStatus");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundRequest", b =>
                {
                    b.HasOne("OBS.Database.Models.RefundStatus", "RefundStatus")
                        .WithMany()
                        .HasForeignKey("RefundStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefundStatus");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomer", b =>
                {
                    b.HasOne("OBS.Database.Models.Address", "Address")
                        .WithMany("ResidentialCustomers")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.ApplicationStatus", "ApplicationStatus")
                        .WithMany("ResidentialCustomers")
                        .HasForeignKey("ApplicationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Employer", "Employer")
                        .WithMany("ResidentialCustomers")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Person", "NextOfKin")
                        .WithMany("ResidentialCustomers")
                        .HasForeignKey("NextOfKinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("ApplicationStatus");

                    b.Navigation("Employer");

                    b.Navigation("NextOfKin");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomerDocument", b =>
                {
                    b.HasOne("OBS.Database.Models.Document", "Document")
                        .WithMany("ResidentialCustomerDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.ResidentialCustomer", "ResidentialCustomer")
                        .WithMany("ResidentialCustomerDocuments")
                        .HasForeignKey("ResidentialCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("ResidentialCustomer");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomerSubOccupant", b =>
                {
                    b.HasOne("OBS.Database.Models.ResidentialCustomer", "ResidentailCustomer")
                        .WithMany("ResidentialCustomerSubOccupants")
                        .HasForeignKey("ResidentialCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidentailCustomer");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialLease", b =>
                {
                    b.HasOne("OBS.Database.Models.ResidentialBursarCustomer", "ResidentialBursarCustomer")
                        .WithMany("ResidentialLeases")
                        .HasForeignKey("ResidentialBursarCustomerId");

                    b.HasOne("OBS.Database.Models.ResidentialCustomer", "ResidentialCustomer")
                        .WithMany("ResidentialLeases")
                        .HasForeignKey("ResidentialCustomerId");

                    b.Navigation("ResidentialBursarCustomer");

                    b.Navigation("ResidentialCustomer");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialPrice", b =>
                {
                    b.HasOne("OBS.Database.Models.BillingPeriod", "BillingPeriod")
                        .WithMany("ResidentialPrices")
                        .HasForeignKey("BillingPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("ResidentialPrices")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.FeeType", "FeeType")
                        .WithMany("ResidentialPrices")
                        .HasForeignKey("FeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingPeriod");

                    b.Navigation("Building");

                    b.Navigation("FeeType");
                });

            modelBuilder.Entity("OBS.Database.Models.RoomExpirationNotification", b =>
                {
                    b.HasOne("OBS.Database.Models.SentEmail", "SentEmail")
                        .WithMany("RoomExpirationNotifications")
                        .HasForeignKey("EmailId");

                    b.HasOne("OBS.Database.Models.SentSMS", "SentSms")
                        .WithMany("RoomExpirationNotifications")
                        .HasForeignKey("SmsId");

                    b.Navigation("SentEmail");

                    b.Navigation("SentSms");
                });

            modelBuilder.Entity("OBS.Database.Models.RoomVacation", b =>
                {
                    b.HasOne("OBS.Database.Models.Building", "Building")
                        .WithMany("RoomVacations")
                        .HasForeignKey("BuildingID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OBS.Database.Models.ReasonsNotReturning", "ReasonsNotReturning")
                        .WithMany("RoomVacations")
                        .HasForeignKey("ReasonsNotReturningID");

                    b.Navigation("Building");

                    b.Navigation("ReasonsNotReturning");
                });

            modelBuilder.Entity("OBS.Database.Models.SentEmail", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany("SentEmails")
                        .HasForeignKey("LeaseID");

                    b.HasOne("OBS.Database.Models.ResidentialLease", "ResidentialLease")
                        .WithMany()
                        .HasForeignKey("ResidentialLeaseId");

                    b.Navigation("Lease");

                    b.Navigation("ResidentialLease");
                });

            modelBuilder.Entity("OBS.Database.Models.SentSMS", b =>
                {
                    b.HasOne("OBS.Database.Models.Lease", "Lease")
                        .WithMany("SentSMS")
                        .HasForeignKey("LeaseID");

                    b.HasOne("OBS.Database.Models.ResidentialLease", "ResidentialLease")
                        .WithMany()
                        .HasForeignKey("ResidentialLeaseId");

                    b.Navigation("Lease");

                    b.Navigation("ResidentialLease");
                });

            modelBuilder.Entity("OBS.Database.Models.Sleepover", b =>
                {
                    b.HasOne("OBS.Database.Models.SleepoverType", "SleepoverType")
                        .WithMany()
                        .HasForeignKey("SleepoverTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SleepoverType");
                });

            modelBuilder.Entity("OBS.Database.Models.Town", b =>
                {
                    b.HasOne("OBS.Database.Models.Province", "Province")
                        .WithMany("Towns")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("OBS.Database.Models.Transaction", b =>
                {
                    b.HasOne("OBS.Database.Models.SBUXMerchant", "SbuxMerchant")
                        .WithMany()
                        .HasForeignKey("SbuxMerchantId");

                    b.HasOne("OBS.Database.Models.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SbuxMerchant");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("OBS.Database.Models.VacateInspectionList", b =>
                {
                    b.HasOne("OBS.Database.Models.ApartmentType", "ApartmentType")
                        .WithMany("VacateInspectionList")
                        .HasForeignKey("ApartmentTypeId");

                    b.Navigation("ApartmentType");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiAllocation", b =>
                {
                    b.HasOne("OBS.Database.Models.WifiPricing", "WifiPricing")
                        .WithMany("WifiAllocations")
                        .HasForeignKey("WifiPricingID");

                    b.Navigation("WifiPricing");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiBuildingPrice", b =>
                {
                    b.HasOne("OBS.Database.Models.WifiPricing", "WifiPricing")
                        .WithMany("WifiBuildingPrice")
                        .HasForeignKey("WifiPricingID");

                    b.Navigation("WifiPricing");
                });

            modelBuilder.Entity("OBS.Common.BusinessObjects.AuditHeader", b =>
                {
                    b.Navigation("AuditHeaderDetails");
                });

            modelBuilder.Entity("OBS.Database.Models.Address", b =>
                {
                    b.Navigation("Employers");

                    b.Navigation("Persons");

                    b.Navigation("ResidentialCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.ApartmentType", b =>
                {
                    b.Navigation("VacateInspectionList");
                });

            modelBuilder.Entity("OBS.Database.Models.ApplicationStatus", b =>
                {
                    b.Navigation("ResidentialCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.BillingPeriod", b =>
                {
                    b.Navigation("ResidentialPrices");
                });

            modelBuilder.Entity("OBS.Database.Models.Building", b =>
                {
                    b.Navigation("ArchivedRoomVacations");

                    b.Navigation("CancelReservations");

                    b.Navigation("FeeTypeBuildingBillingTypeTemplates");

                    b.Navigation("Leases");

                    b.Navigation("LeasesHistories");

                    b.Navigation("MaintenanceMessages");

                    b.Navigation("ResidentialPrices");

                    b.Navigation("RoomVacations");
                });

            modelBuilder.Entity("OBS.Database.Models.BursarPricing", b =>
                {
                    b.Navigation("PricingItems");
                });

            modelBuilder.Entity("OBS.Database.Models.City", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("CityInstitutions");
                });

            modelBuilder.Entity("OBS.Database.Models.Country", b =>
                {
                    b.Navigation("Provinces");
                });

            modelBuilder.Entity("OBS.Database.Models.Document", b =>
                {
                    b.Navigation("ResidentialCustomerDocuments");
                });

            modelBuilder.Entity("OBS.Database.Models.DocumentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("OBS.Database.Models.Employer", b =>
                {
                    b.Navigation("ResidentialCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.FeeType", b =>
                {
                    b.Navigation("FeeTypeBuildingBillingTypeTemplates");

                    b.Navigation("ResidentialLeasePricing");

                    b.Navigation("ResidentialPrices");
                });

            modelBuilder.Entity("OBS.Database.Models.FrequencyType", b =>
                {
                    b.Navigation("FeeTypes");

                    b.Navigation("ResidentialLeasePricing");
                });

            modelBuilder.Entity("OBS.Database.Models.HeadLease", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OBS.Database.Models.IdentityFramework.User", b =>
                {
                    b.Navigation("Membership");

                    b.Navigation("UserDetails");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("OBS.Database.Models.Institution", b =>
                {
                    b.Navigation("CityInstitutions");
                });

            modelBuilder.Entity("OBS.Database.Models.Lease", b =>
                {
                    b.Navigation("AutoCancelledLease");

                    b.Navigation("MonthlyPayments");

                    b.Navigation("OnceOffPayments");

                    b.Navigation("SentEmails");

                    b.Navigation("SentSMS");
                });

            modelBuilder.Entity("OBS.Database.Models.LookupType", b =>
                {
                    b.Navigation("Lookups");
                });

            modelBuilder.Entity("OBS.Database.Models.Map", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("OBS.Database.Models.Organization", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("OBS.Database.Models.Person", b =>
                {
                    b.Navigation("ResidentialCustomers");
                });

            modelBuilder.Entity("OBS.Database.Models.Province", b =>
                {
                    b.Navigation("Towns");
                });

            modelBuilder.Entity("OBS.Database.Models.ReasonsNotReturning", b =>
                {
                    b.Navigation("ArchivedRoomVacations");

                    b.Navigation("RoomVacations");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundMessage", b =>
                {
                    b.Navigation("RefundAttachments");
                });

            modelBuilder.Entity("OBS.Database.Models.RefundRequest", b =>
                {
                    b.Navigation("RefundMessages");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialBursarCustomer", b =>
                {
                    b.Navigation("ResidentialLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialCustomer", b =>
                {
                    b.Navigation("ResidentialCustomerDocuments");

                    b.Navigation("ResidentialCustomerSubOccupants");

                    b.Navigation("ResidentialLeases");
                });

            modelBuilder.Entity("OBS.Database.Models.ResidentialLease", b =>
                {
                    b.Navigation("Parkings");

                    b.Navigation("Pricing");
                });

            modelBuilder.Entity("OBS.Database.Models.SentEmail", b =>
                {
                    b.Navigation("RoomExpirationNotifications");
                });

            modelBuilder.Entity("OBS.Database.Models.SentSMS", b =>
                {
                    b.Navigation("RoomExpirationNotifications");
                });

            modelBuilder.Entity("OBS.Database.Models.WifiPricing", b =>
                {
                    b.Navigation("WifiAllocations");

                    b.Navigation("WifiBuildingPrice");
                });
#pragma warning restore 612, 618
        }
    }
}
